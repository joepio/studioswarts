{"version":3,"sources":["webpack:///./src/templates/project.js"],"names":["heroStyle","height","fontSize","overflow","position","heroImageStyle","top","right","left","bottom","heroTextStyle","fontFamily","styles","headerFont","marginLeft","color","zIndex","textStyle","textAlign","margin","bodyFont","data","images","allFile","edges","post","markdownRemark","frontmatter","title","style","fluid","node","childImageSharp","dangerouslySetInnerHTML","__html","html","map","img","padding","paddingTop","query"],"mappings":"2FAAA,wIAOMA,EAAY,CAChBC,OAAQ,QACRC,SAAU,OACVC,SAAU,SACVC,SAAU,YAGNC,EAAiB,CACrBD,SAAU,WACVE,IAAK,EACLC,MAAO,EACPC,KAAM,EACNC,OAAQ,GAGJC,EAAgB,CACpBN,SAAU,WACVK,OAAQ,OACRE,WAAYC,IAAOC,WACnBC,WAAY,OACZC,MAAO,QACPC,OAAQ,GAGJC,EAAY,CAChBC,UAAW,SACXhB,SAAU,SACViB,OAAQ,OACRR,WAAYC,IAAOQ,UAGN,sBAAe,IAAZC,EAAW,EAAXA,KACVC,EAASD,EAAKE,QAAQC,MACtBC,EAAOJ,EAAKK,eAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAQD,EAAKE,YAAYC,QAE3B,yBAAKC,MAAO7B,GACV,wBAAI6B,MAAOnB,GAAgBe,EAAKE,YAAYC,OAC5C,kBAAC,IAAD,CAAKC,MAAOxB,EAAgByB,MAAOR,EAAO,GAAGS,KAAKC,gBAAgBF,SAEpE,yBAAKD,MAAOZ,EAAWgB,wBAAyB,CAAEC,OAAQT,EAAKU,QAC9Db,EAAOc,KAAI,SAAAC,GAAG,OACb,yBAAKR,MAAO,CACVS,QAAS,OACTC,WAAY,MAEZ,kBAAC,IAAD,CAAKT,MAAOO,EAAIN,KAAKC,gBAAgBF,cAMxC,IAAMU,EAAK","file":"component---src-templates-project-js-f65584d746db0e415556.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Helmet from 'react-helmet'\nimport Layout from \"../components/layout\"\nimport { styles } from \"../styles\"\n\nconst heroStyle = {\n  height: '50rem',\n  fontSize: '3rem',\n  overflow: 'hidden',\n  position: 'relative',\n}\n\nconst heroImageStyle = {\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  left: 0,\n  bottom: 0,\n}\n\nconst heroTextStyle = {\n  position: 'absolute',\n  bottom: '2rem',\n  fontFamily: styles.headerFont,\n  marginLeft: '1rem',\n  color: 'white',\n  zIndex: 1,\n}\n\nconst textStyle = {\n  textAlign: 'center',\n  fontSize: '1.2rem',\n  margin: '2rem',\n  fontFamily: styles.bodyFont,\n}\n\nexport default ({ data }) => {\n  const images = data.allFile.edges\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <Helmet>\n        <title>{post.frontmatter.title}</title>\n      </Helmet>\n      <div style={heroStyle}>\n        <h1 style={heroTextStyle}>{post.frontmatter.title}</h1>\n        <Img style={heroImageStyle} fluid={images[1].node.childImageSharp.fluid} />\n      </div>\n      <div style={textStyle} dangerouslySetInnerHTML={{ __html: post.html }} />\n      {images.map(img => (\n        <div style={{\n          padding: \"1rem\",\n          paddingTop: \"0\",\n        }}>\n          <Img fluid={img.node.childImageSharp.fluid} />\n        </div>\n      ))}\n   </Layout>\n  )\n}\nexport const query = graphql`\n  query($slug: String!, $absolutePathRegex: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n    allFile(\n      filter: {\n        absolutePath: { regex: $absolutePathRegex }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxWidth: 1800, quality: 90) {\n              aspectRatio\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}